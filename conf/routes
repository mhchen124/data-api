# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Some basic controllers
GET     /                                                       controllers.HomeController.index
GET     /testdb                                                 controllers.ProjectStatsController.testdb()
# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file                                           controllers.Assets.versioned(path="/public", file: Asset)


#######################
#
# GPS DATA API ROUTES #
#
#######################


# ------------------
# Project level APIs
# ------------------

GET     /video-views-total/:pid                                             controllers.ProjectStatsController.getTotalVideoViews(pid: Long)
GET     /video-views-total-unique/:pid                                      controllers.ProjectStatsController.getTotalUniqueVideoViews(pid: Long)
GET     /interactions/:pid                                                  controllers.ProjectStatsController.getTotalInteractions(pid: Long)
GET     /gender/:pid                                                        controllers.ProjectStatsController.getTotalByGender(pid: Long)
GET     /followers/:pid                                                     controllers.ProjectStatsController.getTotalFollowers(pid: Long)
GET     /reach/:pid                                                         controllers.ProjectStatsController.getTotalReach(pid: Long)
GET     /trends/:pid                                                        controllers.ProjectStatsController.getTrends(pid: Long)
GET     /posts/:pid                                                         controllers.ProjectStatsController.getTotalPosts(pid: Long)
GET     /avg-time-viewed/:pid                                               controllers.ProjectStatsController.getAverageTimeViewed(pid: Long)
GET     /total-time-viewed/:pid                                             controllers.ProjectStatsController.getTotalTimeViewed(pid: Long)
GET     /total-video-views-date-range/:pid/*start/*stop                     controllers.ProjectStatsController.getTotalVideoViewsDateRange(pid: Long, start: String, stop: String)
GET     /total-video-view-types-date-range/:pid/*start/*stop                controllers.ProjectStatsController.getTotalVideoViewTypesDateRange(pid: Long, start: String, stop: String)
GET     /top10-heatmap/:pid                                                 controllers.ProjectStatsController.getTop10Heatmap(pid: Long)
GET     /top10-video-ids/:pid                                               controllers.ProjectStatsController.getTop10VideoIds(pid: Long)


# -----------------------------------
# Asset level APIs - individual asset
# -----------------------------------

# date ranged daily data
GET     /daily-video-reach-date-range/:assetId/*start/*stop                 controllers.ProjectStatsController.getDailyVideoReachDateRange(assetId: Long, start: String, stop: String)
GET     /avg-time-viewed-date-range/:assetId/*start/*stop                   controllers.ProjectStatsController.getAverageTimeViewedDateRange(assetId: Long, start: String, stop: String)
GET     /daily-action-types-date-range/:assetId/*start/*stop                controllers.ProjectStatsController.getDailyActionTypesDateRange(assetId: Long, start: String, stop: String)
GET     /daily-reaction-types-date-range/:assetId/*start/*stop              controllers.ProjectStatsController.getDailyReactionTypesDateRange(assetId: Long, start: String, stop: String)
GET     /daily-video-views-date-range/:assetId/*start/*stop                 controllers.ProjectStatsController.getDailyVideoViewsDateRange(assetId: Long, start: String, stop: String)
GET     /daily-video-view-types-date-range/:assetId/*start/*stop            controllers.ProjectStatsController.getDailyVideoViewTypesDateRange(assetId: Long, start: String, stop: String)
# date ranged total number
GET     /video-views-date-range/:assetId/*start/*stop                       controllers.ProjectStatsController.getVideoViewsDateRange(assetId: Long, start: String, stop: String)
GET     /video-reach-date-range/:assetId/*start/*stop                       controllers.ProjectStatsController.getVideoReachDateRange(assetId: Long, start: String, stop: String)
GET     /video-retention/:assetId                                           controllers.ProjectStatsController.getVideoRetention(assetId: Long)


# --------------------------------
# Asset level APIs - grouped asset
# --------------------------------

# date ranged daily data
GET     /avg-time-viewed-date-range-batch/*start/*stop/*assetIDs            controllers.ProjectStatsController.getAverageTimeViewedDateRangeBatch(assetIDs: String, start: String, stop: String)
GET     /daily-action-types-date-range-batch/*start/*stop/*assetIDs         controllers.ProjectStatsController.getDailyActionTypesDateRangeBatch(assetIDs: String, start: String, stop: String)
GET     /daily-reaction-types-date-range-batch/*start/*stop/*assetIDs       controllers.ProjectStatsController.getDailyReactionTypesDateRangeBatch(assetIDs: String, start: String, stop: String)
GET     /daily-video-views-date-range-batch/*start/*stop/*assetIDs          controllers.ProjectStatsController.getDailyVideoViewsDateRangeBatch(assetIDs: String, start: String, stop: String)
GET     /daily-video-view-types-date-range-batch/*start/*stop/*assetIDs     controllers.ProjectStatsController.getDailyVideoViewTypesDateRangeBatch(assetIDs: String, start: String, stop: String)
# date ranged total number
GET     /video-views-date-range-batch/*start/*stop/*assetIDs                controllers.ProjectStatsController.getVideoViewsDateRangeBatch(assetIDs: String, start: String, stop: String)
#GET     /video-reach-date-range/:id/*start/*stop                        controllers.ProjectStatsController.getVideoReachDateRange(id: Long, start: String, stop: String)
GET     /video-retention-batch/*assetIDs                                    controllers.ProjectStatsController.getVideoRetentionBatch(assetIDs: String)

GET     /video-stats-batch/*start/*stop/*assetIDs                           controllers.ProjectStatsController.getVideoStatsBatch(assetIDs: String, start: String, stop: String)
